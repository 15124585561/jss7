<?xml version="1.0"?>
<project name="ss7.release.sf" default="package" basedir=".">

	<!-- Components Versions -->
	<property name="RELEASE_VERSION" value="1.0.0.BETA3" />

	<property name="parent_VERSION" value="1.0.0.BETA4" />

	<property name="asn_VERSION" value="1.0.0.BETA2" />
	<property name="stream_VERSION" value="1.0.0.BETA1" />
	<property name="m3ua_VERSION" value="1.0.0.BETA1" />
	<property name="mtp_VERSION" value="1.0.0.BETA4" />
	<property name="isup_VERSION" value="1.0.0.BETA3" />
	<property name="sccp_VERSION" value="1.0.0.BETA3" />
	<property name="tcap_VERSION" value="1.0.0.BETA3" />
	<property name="map_VERSION" value="1.0.0.BETA3" />

	<property name="asn_DOCS_VERSION" value="1.0.0.BETA1" />
	<property name="stream_DOCS_VERSION" value="1.0.0.BETA1" />
	<property name="m3ua_DOCS_VERSION" value="1.0.0.BETA1" />
	<property name="mtp_DOCS_VERSION" value="1.0.0.BETA2" />
	<property name="isup_DOCS_VERSION" value="1.0.0.BETA1" />
	<property name="sccp_DOCS_VERSION" value="1.0.0.BETA1" />
	<property name="tcap_DOCS_VERSION" value="1.0.0.BETA1" />
	<property name="map_DOCS_VERSION" value="1.0.0.BETA1" />


	<property name="PROTOCOLS_LIST" value="isup,sccp,tcap,map" />


	<!-- Directories Configuration -->
	<property name="checkout_base_dir" value="${basedir}/protocols" />
	<property name="zip_dir" value="${basedir}/protocols/zip" />

	<property name="zip_file_name" value="mobicents-ss7-${RELEASE_VERSION}" />

	<property name="failoncopy" value="true" />

	<!-- Definition -->
	<property environment="sys" />
	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows" />
	</condition>

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ss7.release.sf}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<target name="init" />

	<target name="checkout" depends="init,checkout-asn,checkout-stream,checkout-protocol" />
	<target name="build-src" depends="build-src-asn,build-src-stream,build-src-protocol" />
	<target name="build-docs" depends="build-docs-asn,build-docs-stream,build-docs-protocol" />
	<target name="prepare-text-content" depends="prepare-text-content-core" />
	<target name="copy-jars" depends="copy-jars-asn,copy-jars-stream,copy-jars-protocol" />
	<target name="copy-docs" depends="copy-docs-asn,copy-docs-stream,copy-docs-protocol" />

	<!-- Checkout section -->

	<target name="checkout-asn">
		<echo>Checkout Mobicents ASN (v${asn_VERSION}, Docs v${asn_DOCS_VERSION})</echo>
		<exec executable="${mvn.executable}" dir="${ss7.release.sf}/../">
			<arg line="-f external-components-checkout-standalone.xml validate -P checkout-asn -Dcheckout_base_dir=${checkout_base_dir} -Dasn_version=${asn_VERSION} -Ddocs_version=${asn_DOCS_VERSION}" />
		</exec>
	</target>
	<target name="checkout-stream">
		<echo>Checkout Mobicents Stream (v${stream_VERSION}, Docs v${stream_DOCS_VERSION})</echo>
		<exec executable="${mvn.executable}" dir="${ss7.release.sf}/../">
			<arg line="-f external-components-checkout-standalone.xml validate -P checkout-stream -Dcheckout_base_dir=${checkout_base_dir} -Dstream_version=${stream_VERSION} -Ddocs_version=${stream_DOCS_VERSION}" />
		</exec>
	</target>

	<target name="checkout-protocol">

		<echo>Checkout SS7 Parent v${parent_VERSION}</echo>
		<exec executable="${mvn.executable}" dir="${ss7.release.sf}/../">
			<arg line="-f internal-components-checkout-standalone.xml validate -P checkout-protocol -Dcheckout_base_dir=${checkout_base_dir} -Dprotocol_name=parent -Dprotocol_id=ss7 -Dprotocol_version=${parent_VERSION}" />
		</exec>


		<!-- For this rel, M3UA is different -->
		<echo>Checkout SS7 m3ua Protocol v${m3ua_VERSION}</echo>
		<exec executable="${mvn.executable}" dir="${ss7.release.sf}/../">
			<arg line="-f internal-components-checkout-standalone.xml validate -P checkout-protocol -Dcheckout_base_dir=${checkout_base_dir} -Dprotocol_name=m3ua -Dprotocol_id=m3ua -Dprotocol_version=${m3ua_VERSION} -Ddocs_version=${mtp_DOCS_VERSION}" />
		</exec>
		<echo>Checkout SS7 mtp Protocol v${mtp_VERSION}</echo>
		<exec executable="${mvn.executable}" dir="${ss7.release.sf}/../">
			<arg line="-f internal-components-checkout-standalone.xml validate -P checkout-protocol -Dcheckout_base_dir=${checkout_base_dir} -Dprotocol_name=mtp -Dprotocol_id=mtp -Dprotocol_version=${mtp_VERSION} -Ddocs_version=${mtp_DOCS_VERSION}" />
		</exec>

		<for delimiter="," param="protocol.name" list="${PROTOCOLS_LIST}">
			<sequential>
				<echo>Checkout SS7 @{protocol.name} Protocol v${@{protocol.name}_VERSION}</echo>
				<exec executable="${mvn.executable}" dir="${ss7.release.sf}/../">
					<arg line="-f internal-components-checkout-standalone.xml validate -P checkout-protocol -Dcheckout_base_dir=${checkout_base_dir} -Dprotocol_name=@{protocol.name} -Dprotocol_id=@{protocol.name} -Dprotocol_version=${@{protocol.name}_VERSION} -Ddocs_version=${@{protocol.name}_DOCS_VERSION}" />
				</exec>
			</sequential>
		</for>
	</target>



	<!-- Compile Section -->

	<target name="build-src-protocol">

		<echo>Build SS7 Parent v${parent_VERSION}</echo>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/parent">
			<arg line="-f pom.xml clean install" />
		</exec>

		<echo>Build SS7 m3ua Protocol v${m3ua_VERSION}</echo>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/m3ua">
			<arg line="-f pom.xml clean install" />
		</exec>

		<echo>Build SS7 mtp Protocol v${mtp_VERSION}</echo>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/mtp">
			<arg line="-f pom.xml clean install" />
		</exec>
		<for delimiter="," param="protocol.name" list="${PROTOCOLS_LIST}">
			<sequential>
				<echo>Build SS7 @{protocol.name} Protocol v${@{protocol.name}_VERSION}</echo>
				<exec executable="${mvn.executable}" dir="${checkout_base_dir}/@{protocol.name}">
					<arg line="-f pom.xml clean install" />
				</exec>

			</sequential>
		</for>

	</target>

	<target name="build-src-asn">
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/asn">
			<arg line="-f pom.xml clean install" />
		</exec>

	</target>

	<target name="build-src-stream">
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/stream">
			<arg line="-f pom.xml clean install" />
		</exec>

	</target>

	<!-- build docs section -->
	<target name="build-docs-protocol">


		<echo>Build SS7 mtp Protocol v${mtp_VERSION}</echo>
		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/mtp/docs">
			<arg line="-f pom.xml clean install" />
		</exec>
		<for delimiter="," param="protocol.name" list="${PROTOCOLS_LIST}">
			<sequential>
				<echo>Build Docs SS7 @{protocol.name} Protocol v${@{protocol.name}_VERSION}</echo>


				<exec executable="${mvn.executable}" dir="${checkout_base_dir}/@{protocol.name}/docs">
					<arg line="-f pom.xml clean install -Pmobicents" />
				</exec>

			</sequential>
		</for>

	</target>

	<target name="build-docs-asn">

		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/asn/docs">
			<arg line="-f pom.xml clean install -Pmobicents" />
		</exec>

	</target>

	<target name="build-docs-stream">

		<exec executable="${mvn.executable}" dir="${checkout_base_dir}/stream/docs">
			<arg line="-f pom.xml clean install -Pmobicents" />
		</exec>

	</target>


	<!-- Copy jars section -->

	<target name="copy-jars-asn">

		<copy todir="${zip_dir}/asn" failonerror="${failoncopy}">
			<fileset dir="${checkout_base_dir}/asn/asn-impl/target">
				<include name="asn-${asn_VERSION}.jar" />
			</fileset>
		</copy>

	</target>
	<target name="copy-jars-stream">
		<copy todir="${zip_dir}/stream" failonerror="${failoncopy}">
			<fileset dir="${checkout_base_dir}/stream/stream-impl/target">
				<include name="stream-${asn_VERSION}.jar" />
			</fileset>

		</copy>

	</target>

	<target name="copy-jars-protocol">

		<echo>Copy jars SS7 mtp Protocol v${mtp_VERSION}</echo>

		<copy todir="${zip_dir}/mtp" failonerror="${failoncopy}">
			<fileset dir="${checkout_base_dir}/mtp/mtp-impl/target">
				<include name="mtp-${mtp_VERSION}.jar" />
			</fileset>

		</copy>
		<copy todir="${zip_dir}/m3ua" verbose="true" failonerror="${failoncopy}">
			<fileset dir="${checkout_base_dir}/m3ua/api/target">
				<include name="m3ua-api-${m3ua_VERSION}.jar" />
			</fileset>
			<fileset dir="${checkout_base_dir}/m3ua/impl/target">
				<include name="m3ua-impl-${m3ua_VERSION}.jar" />
			</fileset>
		</copy>
		<for delimiter="," param="protocol.name" list="${PROTOCOLS_LIST}">
			<sequential>
				<echo>Copy jars SS7 @{protocol.name} Protocol v${@{protocol.name}_VERSION}</echo>


				<copy todir="${zip_dir}/@{protocol.name}" verbose="true" failonerror="${failoncopy}">
					<fileset dir="${checkout_base_dir}/@{protocol.name}/@{protocol.name}-api/target">
						<include name="@{protocol.name}-api-${@{protocol.name}_VERSION}.jar" />
					</fileset>
					<fileset dir="${checkout_base_dir}/@{protocol.name}/@{protocol.name}-impl/target">
						<include name="@{protocol.name}-impl-${@{protocol.name}_VERSION}.jar" />
					</fileset>

				</copy>

			</sequential>
		</for>

		<!-- copy sccp service. -->
		<copy todir="${zip_dir}/sccp" verbose="true" failonerror="${failoncopy}">
			
			<fileset dir="${checkout_base_dir}/sccp/sccp-impl/target">
				<include name="asccp-impl-stack" />
			</fileset>
		</copy>
	</target>

	<!-- Copy docs section -->

	<target name="copy-docs-asn">

		<copy todir="${zip_dir}/asn/docs">
			<fileset dir="${checkout_base_dir}/asn/docs/jdocbook-mobicents/target/docbook/publish/en-US">
				<include name="**" />
			</fileset>
		</copy>

	</target>
	<target name="copy-docs-stream">

		<copy todir="${zip_dir}/stream/docs">
			<fileset dir="${checkout_base_dir}/stream/docs/jdocbook-mobicents/target/docbook/publish/en-US">
				<include name="**" />
			</fileset>
		</copy>
	</target>

	<target name="copy-docs-protocol">

		<echo>Copy Docs SS7 mtp Protocol v${mtp_VERSION}</echo>

		<copy todir="${zip_dir}/mtp/docs">
			<fileset dir="${checkout_base_dir}/mtp/docs/jdocbook-mobicents/target/docbook/publish/en-US/">
				<include name="**" />
			</fileset>
		</copy>

		<!-- no m3ua docs -->

		<for delimiter="," param="protocol.name" list="${PROTOCOLS_LIST}">
			<sequential>
				<echo>Copy Docs SS7 @{protocol.name} Protocol v${@{protocol.name}_VERSION}</echo>

				<copy todir="${zip_dir}/@{protocol.name}/docs">
					<fileset dir="${checkout_base_dir}/@{protocol.name}/docs/jdocbook-mobicents/target/docbook/publish/en-US/">
						<include name="**" />
					</fileset>
				</copy>
			</sequential>
		</for>
	</target>

	<!-- Prepare text content section -->

	<target name="prepare-text-content-core">
		<copy todir="${zip_dir}" file="${basedir}/README.TXT" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${RELEASE_VERSION}" />
					<token key="ASN_VERSION" value="${asn_VERSION}" />
					<token key="STREAM_VERSION" value="${stream_VERSION}" />
					<token key="PARENT_VERSION" value="${parent_VERSION}" />
					<token key="M3UA_VERSION" value="${m3ua_VERSION}" />
					<token key="MTP_VERSION" value="${mtp_VERSION}" />
					<token key="ISUP_VERSION" value="${isup_VERSION}" />
					<token key="SCCP_VERSION" value="${sccp_VERSION}" />
					<token key="TCAP_VERSION" value="${tcap_VERSION}" />
					<token key="MAP_VERSION" value="${map_VERSION}" />

				</replacetokens>
			</filterchain>
		</copy>
	</target>

	<!-- Release procedures : Make ZIP(s), Checksum , Clean -->

	<target name="build-src-zip" depends="clean, checkout">

		<zip destfile="${basedir}/${zip_file_name}-src.zip">
			<zipfileset dir="${checkout_base_dir}" excludes="zip">
			</zipfileset>
		</zip>

		<antcall target="checksum">
			<param name="source.file" value="${basedir}/${zip_file_name}-src.zip" />
			<param name="algorithm" value="sha1" />
		</antcall>

	</target>

	<target name="package" description="Create zip file: ${checkout_base_dir}/${zip_file_name}.zip" depends="build-src-zip, build-src,copy-jars, build-docs, copy-docs, prepare-text-content">
		<zip destfile="${basedir}/${zip_file_name}.zip" basedir="${zip_dir}" />
		<antcall target="checksum">
			<param name="source.file" value="${basedir}/${zip_file_name}.zip" />
			<param name="algorithm" value="sha1" />
		</antcall>

	</target>

	<target name="checksum">
		<checksum file="${source.file}" algorithm="${algorithm}" fileext=".${algorithm}.asc" forceOverwrite="yes" />
	</target>

	<target name="clean" description="Remove everything that we created.">
		<delete dir="${checkout_base_dir}" verbose="false" />
		<delete file="${basedir}/${zip_file_name}.zip" />
		<delete file="${basedir}/${zip_file_name}-src.zip" />
		<delete file="${basedir}/${zip_file_name}.zip.sha1.asc" />
		<delete file="${basedir}/${zip_file_name}-src.zip.sha1.asc" />
	</target>

</project>

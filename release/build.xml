<?xml version="1.0"?>
<project name="ss7.release.sf" default="package" basedir=".">

	<!-- Components Versions -->
	<property name="release.version" value="1.0.0.BETA5" />

	<property name="paren.version" value="1.0.0.BETA4" />


	<property name="asn.version" value="1.0.0.BETA3" />
	<property name="stream.version" value="1.0.0.BETA2" />
	<property name="m3ua.version" value="1.0.0.BETA2" />
	<property name="mtp.version" value="1.0.0.BETA5" />
	<property name="isup.version" value="1.0.0.BETA4" />
	<property name="sccp.version" value="1.0.0.BETA4" />
	<property name="tcap.version" value="1.0.0.BETA4" />
	<property name="map.version" value="1.0.0.BETA4" />

	<property name="protocols.build.list" value="parent,m3ua,mtp,isup,sccp,tcap,map" />
	<property name="protocols.copy.list" value="m3ua,mtp,isup,sccp,tcap,map" />

	<!-- Directories Configuration -->
	<property name="checkout.basedir" value="checkout" />
	<property name="zip.dir" value="${basedir}/zip" />
	<property name="zip.file.destination.dir" value="${basedir}/upload" />
	<property name="zip.file.name" value="mobicents-ss7-${release.version}" />
	<property name="failoncopy" value="true" />
	<property name="test.skip" value="true" />
	<!-- Definition -->

	<property name="release.name" value="point" />

	<property environment="sys" />
	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows" />
	</condition>

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ss7.release.sf}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<target name="init" />

	<target name="checkout" description="Checks out src and downloads everything that is required." depends="checkout-sources" />
	<target name="build" description="Builds components sources and everything associated." depends="build-sources-asn,build-sources-stream,build-sources-ss7" />
	<target name="copy" depends="copy-asn,copy-stream,copy-protocols-ss7" />
	<target name="package" description="Builds builds binary package." depends="clean,checkout,zip.src,build,notes,copy,zip.binary" />
	<target name="clean">
		<echo>Cleaning checkout directory</echo>
		<delete dir="${ant.file.ss7.release.sf}/../${checkout.basedir}" verbose="false" />
		<echo>Cleaning work directory</echo>
		<delete dir="${zip.dir}" verbose="false" />
		<echo>Cleaning upload directory</echo>
		<delete dir="${zip.file.destination.dir}" verbose="false" />
	</target>



	<target name="checkout-sources">
		<echo>Checking out sources</echo>
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../">
			<arg line="validate -P checkout -Dcheckout.dir=${checkout.basedir}" />
		</exec>
	</target>

	<target name="build-sources-asn">
		<exec executable="${mvn.executable}" dir="${checkout.basedir}/asn">
			<arg line="install -P release,set-svn-revision -Dmaven.test.skip=${test.skip} -Drelease.name=${release.name}" />
		</exec>
	</target>

	<target name="build-sources-stream">
		<exec executable="${mvn.executable}" dir="${checkout.basedir}/stream">
			<arg line="install -P release,set-svn-revision -Dmaven.test.skip=${test.skip} -Drelease.name=${release.name}" />
		</exec>
	</target>
	<target name="build-sources-ss7">
		<for delimiter="," param="protocol.name" list="${protocols.build.list}">
			<sequential>
				<echo>Build SS7 @{protocol.name}</echo>
				<exec executable="${mvn.executable}" dir="${checkout.basedir}/@{protocol.name}">
					<arg line="-f pom.xml install -P release,set-svn-revision -Dmaven.test.skip=${test.skip} -Drelease.name=${release.name}" />
				</exec>
			</sequential>
		</for>
	</target>

	<target name="notes">
		<copy todir="${zip.dir}" file="${basedir}/README.TXT" failonerror="${failoncopy}">
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${release.version}" />
					<token key="ASN_VERSION" value="${asn.version}" />
					<token key="STREAM_VERSION" value="${stream.version}" />
					<token key="PARENT_VERSION" value="${paren.version}" />
					<token key="M3UA_VERSION" value="${m3ua.version}" />
					<token key="MTP_VERSION" value="${mtp.version}" />
					<token key="ISUP_VERSION" value="${isup.version}" />
					<token key="SCCP_VERSION" value="${sccp.version}" />
					<token key="TCAP_VERSION" value="${tcap.version}" />
					<token key="MAP_VERSION" value="${map.version}" />

				</replacetokens>
			</filterchain>
		</copy>
	</target>

	<target name="copy-asn">
		<echo>Copy ASN</echo>
		<copy todir="${zip.dir}/asn" failonerror="${failoncopy}">
			<fileset dir="${checkout.basedir}/asn/release/${release.name}">
				<include name="**" />
			</fileset>
		</copy>
	</target>
	<target name="copy-stream">
		<echo>Copy Stream</echo>
		<copy todir="${zip.dir}/stream" failonerror="${failoncopy}">
			<fileset dir="${checkout.basedir}/stream/release/${release.name}">
				<include name="**" />
			</fileset>
		</copy>
	</target>
	<target name="copy-protocols-ss7">
		<for delimiter="," param="protocol.name" list="${protocols.copy.list}">
			<sequential>
				<echo>Copy SS7 @{protocol.name}</echo>
				<copy todir="${zip.dir}/@{protocol.name}" failonerror="${failoncopy}">
					<fileset dir="${checkout.basedir}/@{protocol.name}/release/${release.name}">
						<include name="**" />
					</fileset>
				</copy>
			</sequential>
		</for>
	</target>

	<target name="zip.binary">
		<zip destfile="${zip.file.destination.dir}/${zip.file.name}.zip">
			<zipfileset dir="${zip.dir}" excludes="zip">
			</zipfileset>
		</zip>

		<antcall target="checksum">
			<param name="source.file" value="${zip.file.destination.dir}/${zip.file.name}.zip" />
			<param name="algorithm" value="sha1" />
		</antcall>
	</target>
	<target name="zip.src">
		<zip destfile="${zip.file.destination.dir}/${zip.file.name}-src.zip">
			<zipfileset dir="${checkout.basedir}" excludes="zip">
			</zipfileset>
		</zip>

		<antcall target="checksum">
			<param name="source.file" value="${zip.file.destination.dir}/${zip.file.name}-src.zip" />
			<param name="algorithm" value="sha1" />
		</antcall>

	</target>
	<target name="checksum">
		<checksum file="${source.file}" algorithm="${algorithm}" fileext=".${algorithm}.asc" forceOverwrite="yes" />
	</target>
</project>
